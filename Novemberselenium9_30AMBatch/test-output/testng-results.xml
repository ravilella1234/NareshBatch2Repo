<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-19T10:54:29 IST" name="Suite" finished-at="2024-12-19T10:54:29 IST" duration-ms="269">
    <groups>
    </groups>
    <test started-at="2024-12-19T10:54:29 IST" name="Login" finished-at="2024-12-19T10:54:29 IST" duration-ms="200">
      <class name="tests.LoginTest">
        <test-method signature="loginWithValidCredientials(java.lang.reflect.Method)[pri:1, instance:tests.LoginTest@4d5650ae]" started-at="2024-12-19T10:54:29 IST" name="loginWithValidCredientials" finished-at="2024-12-19T10:54:29 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithValidCredientials(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredientials -->
        <test-method signature="loginWithInvalidUser(java.lang.reflect.Method)[pri:2, instance:tests.LoginTest@4d5650ae]" started-at="2024-12-19T10:54:29 IST" name="loginWithInvalidUser" finished-at="2024-12-19T10:54:29 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidUser(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUser -->
        <test-method signature="loginWithInvalidPassword(java.lang.reflect.Method)[pri:3, instance:tests.LoginTest@4d5650ae]" started-at="2024-12-19T10:54:29 IST" name="loginWithInvalidPassword" finished-at="2024-12-19T10:54:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method signature="loginWithInvalidCredientials(java.lang.reflect.Method)[pri:4, instance:tests.LoginTest@4d5650ae]" started-at="2024-12-19T10:54:29 IST" name="loginWithInvalidCredientials" finished-at="2024-12-19T10:54:29 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidCredientials(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredientials -->
        <test-method signature="loginWithEmptyFields(java.lang.reflect.Method)[pri:5, instance:tests.LoginTest@4d5650ae]" started-at="2024-12-19T10:54:29 IST" name="loginWithEmptyFields" finished-at="2024-12-19T10:54:29 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithEmptyFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFields -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Login -->
    <test started-at="2024-12-19T10:54:29 IST" name="Register" finished-at="2024-12-19T10:54:29 IST" duration-ms="241">
      <class name="tests.RegisterTest">
        <test-method signature="registerWithMandotoryFields(java.lang.reflect.Method)[pri:1, instance:tests.RegisterTest@6cd28fa7]" started-at="2024-12-19T10:54:29 IST" name="registerWithMandotoryFields" finished-at="2024-12-19T10:54:29 IST" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegisterTest.registerWithMandotoryFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandotoryFields -->
        <test-method signature="registerWithAllFields(java.lang.reflect.Method)[pri:2, instance:tests.RegisterTest@6cd28fa7]" started-at="2024-12-19T10:54:29 IST" name="registerWithAllFields" finished-at="2024-12-19T10:54:29 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegisterTest.registerWithAllFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithAllFields -->
        <test-method signature="registerWithDuplicateFields(java.lang.reflect.Method)[pri:3, instance:tests.RegisterTest@6cd28fa7]" started-at="2024-12-19T10:54:29 IST" name="registerWithDuplicateFields" finished-at="2024-12-19T10:54:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegisterTest.registerWithDuplicateFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithDuplicateFields -->
        <test-method signature="registerWithEmptyFields(java.lang.reflect.Method)[pri:4, instance:tests.RegisterTest@6cd28fa7]" started-at="2024-12-19T10:54:29 IST" name="registerWithEmptyFields" finished-at="2024-12-19T10:54:29 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegisterTest.registerWithEmptyFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithEmptyFields -->
      </class> <!-- tests.RegisterTest -->
    </test> <!-- Register -->
    <test started-at="2024-12-19T10:54:29 IST" name="Search" finished-at="2024-12-19T10:54:29 IST" duration-ms="269">
      <class name="tests.SearchTest">
        <test-method signature="searchWithValidProduct(java.lang.reflect.Method)[pri:1, instance:tests.SearchTest@25641d39]" started-at="2024-12-19T10:54:29 IST" name="searchWithValidProduct" finished-at="2024-12-19T10:54:29 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.SearchTest.searchWithValidProduct(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidProduct -->
        <test-method signature="searchWithInvalidProduct(java.lang.reflect.Method)[pri:2, instance:tests.SearchTest@25641d39]" started-at="2024-12-19T10:54:29 IST" name="searchWithInvalidProduct" finished-at="2024-12-19T10:54:29 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.SearchTest.searchWithInvalidProduct(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidProduct -->
        <test-method signature="searchWithEmptyProduct(java.lang.reflect.Method)[pri:3, instance:tests.SearchTest@25641d39]" started-at="2024-12-19T10:54:29 IST" name="searchWithEmptyProduct" finished-at="2024-12-19T10:54:29 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.SearchTest.searchWithEmptyProduct(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithEmptyProduct -->
      </class> <!-- tests.SearchTest -->
    </test> <!-- Search -->
  </suite> <!-- Suite -->
</testng-results>
